name: 'Starts Dashboards with Plugin'
description: 'Installs OpenSearch Dashboard with a plugin from github, then checks out the correct dashboards version for the plugin, configures npm/yarn, bootstraps Dashboards, and starts the instance'

inputs:
  plugin_name:
    description: 'The name of the plugin to use, such as security-dashboards-plugin'
    required: true

  built_plugin_name:
    description: 'The name of the plugin after building, if doing zip install'
    required: false

  built_plugin_suffix:
    description: 'The suffix of the plugin after building, if doing zip instll. Leave empty to indicate default OSD build behavior'
    required: false

  install_zip:
    description: 'Whether the setup should be done using the install plugin flow. Leave empty to indicate dev setup. Only applicable for linux for now'
    required: false

  plugin_repo:
    description: 'The repo of the plugin to use. Leave empty to indicate the repo which is running this action'
    required: false

  opensearch_dashboards_yml:
    description: 'The file to replace opensearch_dashboards.yml. Leave empty to use the default'
    required: false

  plugin_branch:
    description: 'The branch of the repo of the plugin to use. Leave empty to indicate the branch which is running this action'
    required: false

outputs:
  dashboards-directory:
    description: "The directory where the dashboards has been configured"
    value: ${{ steps.determine-dashboards-directory.outputs.dashboards-directory }}

  dashboards-binary-directory:
    description: "The directory of the dashboards binary that was configured"
    value: ${{ steps.determine-dashboards-directory-zip-install.outputs.dashboards-directory }}

  plugin-directory:
    description: "The directory where the plugin has been configured"
    value: ${{ steps.determine-plugin-directory.outputs.plugin-directory }}


runs:
  using: "composite"
  steps:
    - id: determine-dashboards-directory
      if: ${{ inputs.install_zip != 'true' }}
      run: echo "dashboards-directory=OpenSearch-Dashboards"  >> $GITHUB_OUTPUT
      shell: bash

    - id: determine-plugin-directory
      run: echo "::set-output name=plugin-directory::./OpenSearch-Dashboards/plugins/${{ inputs.plugin_name }}"
      shell: bash

    - uses: actions/checkout@v2
      with:
        path: OpenSearch-Dashboards
        repository: cwperks/OpenSearch-Dashboards
        ref: 'support-repeated-plugin'
        fetch-depth: 0
        filter: |
          cypress
          test

    - uses: actions/checkout@v2
      with:
        path: ${{ steps.determine-plugin-directory.outputs.plugin-directory }}

    - uses: actions/checkout@v2
      with:
        path: ./OpenSearch-Dashboards/plugins/security-admin-dashboards-plugin

    - id: osd-version
      run: |
        echo "::set-output name=osd-version::$(jq -r '.opensearchDashboards.version | split(".") | .[:2] | join(".")' package.json)"
        echo "::set-output name=osd-x-version::$(jq -r '.opensearchDashboards.version | split(".") | .[0]' package.json).x"
        echo "::set-output name=plugin-version::$(jq -r '.opensearchDashboardsVersion' opensearch_dashboards.json)"
      working-directory: ${{ steps.determine-plugin-directory.outputs.plugin-directory }}
      shell: bash

    # - id: branch-switch-if-possible
    #   continue-on-error: true # Defaults onto main if the branch switch doesn't work
    #   if: ${{ steps.osd-version.outputs.osd-version }}
    #   run: git checkout ${{ steps.osd-version.outputs.osd-version }} || git checkout ${{ steps.osd-version.outputs.osd-x-version }}
    #   working-directory: ./OpenSearch-Dashboards
    #   shell: bash

    - id: tool-versions
      run: |
        echo "node_version=$(cat .node-version)" >> $GITHUB_OUTPUT
        echo "yarn_version=$(jq -r '.engines.yarn' package.json)" >> $GITHUB_OUTPUT
      working-directory: OpenSearch-Dashboards
      shell: bash

    - uses: actions/setup-node@v1
      with:
        node-version: ${{ steps.tool-versions.outputs.node_version }}
        registry-url: 'https://registry.npmjs.org'

    - name: Setup Opensearch Dashboards
      run: |
        npm uninstall -g yarn
        echo "Installing yarn ${{ steps.tool-versions.outputs.yarn_version }}"
        npm i -g yarn@${{ steps.tool-versions.outputs.yarn_version }}
        yarn cache clean
        yarn add sha.js
      working-directory: OpenSearch-Dashboards
      shell: bash

    - name: Create opensearch_dashboards.json for security admin dashboards plugin
      if: ${{ runner.os == 'Linux' }}
      shell: bash
      run: |
        rm ./OpenSearch-Dashboards/plugins/security-admin-dashboards-plugin/opensearch_dashboards.json
        cat << 'EOT' > ./OpenSearch-Dashboards/plugins/security-admin-dashboards-plugin/opensearch_dashboards.json
        {
          "id": "securityAdminDashboards",
          "version": "3.0.0.0",
          "opensearchDashboardsVersion": "3.0.0",
          "configPath": [
            "opensearch_security_admin"
          ],
          "requiredPlugins": [
            "navigation",
            "savedObjectsManagement"
          ],
          "optionalPlugins": [
            "managementOverview",
            "dataSource",
            "dataSourceManagement"
          ],
          "server": true,
          "ui": true
        }
        EOT

    - name: Create package.json for security admin dashboards plugin
      if: ${{ runner.os == 'Linux' }}
      shell: bash
      run: |
        rm ./OpenSearch-Dashboards/plugins/security-admin-dashboards-plugin/package.json
        cat << 'EOT' > ./OpenSearch-Dashboards/plugins/security-admin-dashboards-plugin/package.json
        {
          "name": "opensearch-security-admin-dashboards",
          "version": "3.0.0.0",
          "main": "target/plugins/opensearch_security_dashboards",
          "opensearchDashboards": {
            "version": "3.0.0",
            "templateVersion": "3.0.0"
          },
          "license": "Apache-2.0",
          "homepage": "https://github.com/opensearch-project/security-dashboards-plugin",
          "scripts": {
            "cypress:open": "cypress open",
            "cypress:run": "cypress run",
            "plugin-helpers": "node ../../scripts/plugin_helpers",
            "osd": "node ../../scripts/osd",
            "opensearch": "node ../../scripts/opensearch",
            "build": "yarn plugin-helpers build && node build_tools/rename_zip.js",
            "start": "node ../../scripts/opensearch-dashboards --dev",
            "lint:es": "node ../../scripts/eslint",
            "lint:style": "node ../../scripts/stylelint",
            "lint": "yarn run lint:es && yarn run lint:style",
            "runIdp": "node ./test/jest_integration/runIdpServer.js",
            "test:jest_server": "ADMIN_PASSWORD=$ADMIN_PASSWORD node ./test/run_jest_tests.js --config ./test/jest.config.server.js",
            "test:jest_ui": "node ./test/run_jest_tests.js --config ./test/jest.config.ui.js",
            "prepare": "husky install"
          },
          "devDependencies": {
            "@elastic/eslint-import-resolver-kibana": "link:../../packages/osd-eslint-import-resolver-opensearch-dashboards",
            "@testing-library/react-hooks": "^7.0.2",
            "@types/hapi__wreck": "^15.0.1",
            "cypress": "^13.6.0",
            "cypress-mochawesome-reporter": "^3.3.0",
            "eslint-plugin-cypress": "^2.8.1",
            "eslint-plugin-unused-imports": "3.1.0",
            "gulp-rename": "2.0.0",
            "husky": "^8.0.0",
            "jose": "^5.2.4",
            "minimist": "^1.2.8",
            "saml-idp": "^1.2.1",
            "selfsigned": "^2.0.1",
            "typescript": "4.0.2"
          },
          "dependencies": {
            "@hapi/cryptiles": "5.0.0",
            "@hapi/wreck": "^17.1.0",
            "html-entities": "1.3.1",
            "zxcvbn": "^4.4.2"
          },
          "resolutions": {
            "selenium-webdriver": "4.10.0",
            "glob-parent": "^5.1.2",
            "debug": "^4.3.4"
          }
        }
        EOT

    - name: Bootstrap the OpenSearch Dashboard
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 20
        max_attempts: 2
        command: yarn --cwd OpenSearch-Dashboards osd bootstrap --oss --single-version=loose # loose is passed in to ignore version conflicts on cypress version used in OSD and this repo

    - name: Download OpenSearch for Linux
      uses: peternied/download-file@v2
      if: ${{ inputs.install_zip == 'true' && runner.os == 'Linux' }}
      with:
        url: https://ci.opensearch.org/ci/dbc/distribution-build-opensearch-dashboards/${{ steps.osd-version.outputs.plugin-version }}/latest/linux/x64/tar/builds/opensearch-dashboards/dist/opensearch-dashboards-min-${{ steps.osd-version.outputs.plugin-version }}-linux-x64.tar.gz

    # Extract downloaded zip
    - name: Extract downloaded tar
      if: ${{ inputs.install_zip == 'true' && runner.os == 'Linux' }}
      run: |
        tar -xzf opensearch-*.tar.gz
        rm -f opensearch-*.tar.gz
      shell: bash

    - id: determine-dashboards-directory-zip-install
      if: ${{ inputs.install_zip == 'true' }}
      run: echo "dashboards-directory=opensearch-dashboards-${{ steps.osd-version.outputs.plugin-version }}-linux-x64"  >> $GITHUB_OUTPUT
      shell: bash

    - name: Build the plugin 
      if: ${{ inputs.install_zip == 'true' }}
      run: |
          yarn build
      working-directory: ${{ steps.determine-plugin-directory.outputs.plugin-directory }}
      shell: bash

    - name: Install the plugin zip
      if: ${{ inputs.install_zip == 'true' && inputs.built_plugin_suffix == '' }}
      run: | 
        ${{ steps.determine-dashboards-directory-zip-install.outputs.dashboards-directory }}/bin/opensearch-dashboards-plugin install file:$(pwd)/OpenSearch-Dashboards/plugins/${{ inputs.plugin_name }}/build/${{ inputs.built_plugin_name }}-${{env.PLUGIN_VERSION}}.zip
      shell: bash

    - name: Install the plugin zip
      if: ${{ inputs.install_zip == 'true' &&  inputs.built_plugin_suffix != '' }}
      run: | 
        ${{ steps.determine-dashboards-directory-zip-install.outputs.dashboards-directory }}/bin/opensearch-dashboards-plugin install file:$(pwd)/OpenSearch-Dashboards/plugins/${{ inputs.plugin_name }}/build/${{ inputs.built_plugin_name }}-${{inputs.built_plugin_suffix}}.zip
      shell: bash

    - name: Replace opensearch_dashboards.yml file if applicable binary
      if: ${{ inputs.opensearch_dashboards_yml != '' && inputs.install_zip == 'true' }}
      run: |
          mv ${{ inputs.opensearch_dashboards_yml }} ${{ steps.determine-dashboards-directory-zip-install.outputs.dashboards-directory }}/config/opensearch_dashboards.yml
      shell: bash

    - name: Replace opensearch_dashboards.yml file if applicable dev
      if: ${{ inputs.opensearch_dashboards_yml != '' && inputs.install_zip != 'true' }}
      run: |
          mv ${{ inputs.opensearch_dashboards_yml }} ./OpenSearch-Dashboards/config/opensearch_dashboards.yml
      shell: bash

    - name: Add to opensearch_dashboards.yml config
      run: |
        echo 'opensearch_security.configuration.admin_pages_enabled: false' >> ./OpenSearch-Dashboards/config/opensearch_dashboards.yml
        echo 'opensearch_security_admin.configuration.session_management_enabled: false' >> ./OpenSearch-Dashboards/config/opensearch_dashboards.yml
      shell: bash

    - name: Print contents
      run: |
        cat ./OpenSearch-Dashboards/config/opensearch_dashboards.yml
      shell: bash